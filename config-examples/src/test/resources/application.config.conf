application {
  session {
    master = "local"
    kryo-registered-classes = []
  }
  kafka {
    broker-list = ["kafka:9092","localhost:8081"]
    default-topic = "sample.test"
    registry-url = "http://schemaregistry:8081"
    group-id = "example.group.id"
  }
  get = ${application.kafka} {
    default-topic = "gettopic"
    dataset {
      source-path = "/dummy"
      sink-path = "/sink"
    }
  }
  filter {
    dataset {
      source-path = "/filter/source"
      sink-path = "/filter/sink"
    }
    services = [
      {
        name = "attribution"
        read-path = ["/attribution/1","/attribution/2"]
        write-path = ["/write/attribution"]
      },
      {
        name = "placebo"
        read-path = ["/placebo/1","/placebo/2"]
        write-path = ["/write/attribution"]
      }
    ]
  }
}
spark {
  "spark.sql.parquet.binaryAsString" = "true"
  "spark.serializer" = "org.apache.spark.serializer.KryoSerializer"
}
